name: CI/CD Workflow

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PUBLIC_URL: /apps
  REGISTRY: ghcr.io
  IMAGE_NAME: hc-home-app

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Yarn install
        run: yarn install

      - name: Yarn lint
        run: yarn lint

      - name: Yarn prettier
        run: yarn prettier

      - name: Yarn test
        run: yarn test --ci --maxWorkers=2

  docker-build-push:
    if: ${{ github.ref == 'refs/heads/main' }}

    runs-on: ubuntu-latest
    needs: verify

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v4

      - name: Inspect working directory
        run: |
          echo "Working directory..."
          pwd
          ls -lart

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image to GitHub Container registry
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PUBLIC_URL=${{ env.PUBLIC_URL }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
